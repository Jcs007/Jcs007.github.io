<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://jcs007.github.io/atom.xml" rel="self"/>
  <link href="http://jcs007.github.io/"/>
  <updated>2017-08-10T17:43:50+08:00</updated>
  <id>http://jcs007.github.io/</id>
  <author>
    <name><![CDATA[Jcs007]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Advice for HTML]]></title>
    <link href="http://jcs007.github.io/blog/2017/08/10/demo04/"/>
    <updated>2017-08-10T17:08:21+08:00</updated>
    <id>http://jcs007.github.io/blog/2017/08/10/demo04</id>
    <content type="html"><![CDATA[<h1>HTML的30条最佳实践</h1>

<p>1、保持标签闭合
2、声明正确的文档类型
3、永远不要使用内联样式
4、将所有外部css文件放入head标签内
5、JavaScript文件放在底部
6、永远不要使用内联JavaScript
7、边开发、边验证
8、下载firebug
9、保持标签名小写
10、使用H1到H6标签
11、写博客时，将H1留给文章标题
12、下载ySlow
13、使用无序列表（UL）包裹导航菜单
14、学习如何应对IE
15、选择合适的IDE
16、上线前，压缩代码
17、精简、精简、再精简
18、给所有的图片加上“ALT”属性
19、通宵达旦
20、查看源代码
21、为所有的元素定义样式
22、使用第三方服务
23、学习每一个HTML标签
24、掌握photoshop
25、参与社区讨论</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Front End Test]]></title>
    <link href="http://jcs007.github.io/blog/2017/08/09/demo03/"/>
    <updated>2017-08-09T16:16:18+08:00</updated>
    <id>http://jcs007.github.io/blog/2017/08/09/demo03</id>
    <content type="html"><![CDATA[<h1>前端面试题总结</h1>

<ul>
<li><p>对web标准盒w3c的理解和认识</p>

<ul>
<li>标签闭合、标签小写、不乱嵌套、提高搜索机器人的搜索几率【SEO】-HTML语义化、使用外链CSS和js脚本、结构行为表现的分离、文件下载与页面的速度更快、内容被更多的用户所访问、内容能被更广泛的设备所访问
更少的代码和组件、容易维护、改版方便、不需要变动页面内容、提供打印版本不需要复制内容、提高网站易用性。</li>
</ul>
</li>
<li><p>xhtml和HTML的区别</p>

<ul>
<li>HTML是一种基本的web网页设计语言，xhtml是一个基于XML的置标语言。最主要的不同：xhtml元素必须正确地嵌套、必须被关闭、标签名必须小写、xhtml文档必须拥有根元素。</li>
</ul>
</li>
<li><p>Doctype严格模式与混杂模式，如何触发这两种模式，区分它们有何意义？</p>

<ul>
<li>用于声明文档使用规范（HTML/xhtml）一般为严格、过渡。基于框架的HTML文档加入XML声明可触发，解析方式更改为IE5.5，拥有IE5.5的bug。</li>
</ul>
</li>
<li><p>行内元素有哪些？块级元素有哪些？CSS的盒模型？</p>

<ul>
<li>块级元素：div、p、h1、h2、h3、h4、form、ul;行内元素：a、b、br、i、span、input、select
CSS基本盒模型：内容、border、margin、padding;弹性盒模型、流式布局、响应式布局、两列式布局、怪异盒模型【CSS Hack】、标准盒模型。</li>
</ul>
</li>
<li><p>CSS引入方式有哪些？link和@import的区别是？</p>

<ul>
<li>内联、内嵌、外链、导入;区别：同时加载、前者无兼容形问题，后者CSS2.1以下浏览器不支持、link支持使用js改变样式，后者不可。</li>
</ul>
</li>
<li><p>CSS选择符有哪些？那些属性可以继承？优先级算法如何计算？内联和important哪个优先级高？</p>

<ul>
<li>标签选择符、类选择符、ID选择符。继承不如指定。ID>class>标签选择。important的优先级更高。</li>
</ul>
</li>
<li><p>前端页面有那三层构成？分别是什么？作用是什么？</p>

<ul>
<li>结构HTML、行为js、表现CSS。</li>
</ul>
</li>
<li><p>IMG标签上的title和ALT属性的区别？</p>

<ul>
<li> ALT当图片不显示是用文字代表，title为该属性提供信息，语义化。</li>
</ul>
</li>
<li><p>描述CSS reset的作用和用途</p>

<ul>
<li>reset重置浏览器的CSS默认属性，浏览器的品种不同，样式不同，然后重置，让它们统一。</li>
</ul>
</li>
<li><p>解释CSS sprite如何使用？</p>

<ul>
<li>CSS精灵把一堆小的图片整合到一张大的图片上，减少服务器对图片的请求次数。</li>
</ul>
</li>
<li><p>为什么是语义化的HTML？</p>

<ul>
<li>直观的认识标签，对于搜索引擎的抓取有好处。</li>
</ul>
</li>
<li><p>清除浮动的几种方式，各自的优缺点</p>

<ul>
<li><p>使用空标签清除浮动clear：both（理论上能清除任何标签。。。增加无意义的标签）</p></li>
<li><p>使用overflow:auto(空标签元素清除浮动而不得不增加无意义代码的弊端，使用zoom：1用于兼容IE)</p></li>
<li><p>使用after伪元素清除浮动（用于非IE浏览器）</p></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Response Layout]]></title>
    <link href="http://jcs007.github.io/blog/2017/08/07/demo02/"/>
    <updated>2017-08-07T13:43:29+08:00</updated>
    <id>http://jcs007.github.io/blog/2017/08/07/demo02</id>
    <content type="html"><![CDATA[<h1>响应式布局</h1>

<ul>
<li><p>@media</p>

<blockquote><p>Media Queries：其作用就是允许添加表达式用以确定媒体的环境情况，以此来应用不同的样式表。换句话说，其允许我们在不改变内容的情况下，改变页面的布局以精确适应不同的设备</p></blockquote>

<ul>
<li><p>适配移动端，在head标签里加入一下语句
<code>
&lt;meta name="viewport" content="width=device-width,initial-scale=1"/&gt;
</code></p></li>
<li><p>响应式布局的写法</p></li>
</ul>


<pre><code class="``">  1、&lt;link rel="stylesheet" type="text/css" href="styleB.css" media="screen and (min-width:600px) and (max-width:800px)"&gt;
</code></pre>

<pre><code class="``">  2、&lt;link rel="stylesheet" type="text/css" href="styleA.css" media="screen and (min-width:400px)"&gt;
</code></pre>

<pre><code class="``">  3、&lt;link rel="stylesheet" media="only screen and(-webkit-min-device-pixel-ratio:2)" type="text/css" href="iphone4.css"/&gt;/*(orientation:portrait)横向（landscape)*/
</code></pre>

<pre><code class="``">  4、&lt;style type="text/css"&gt;
      @media only screen and(max-width:400px){/*当屏幕尺寸小于400px时，应用下面的CSS样式*/
          .class{
              background:#ccc;
          }
      }
      &lt;/style&gt;
</code></pre>

<ul>
<li>Hack（老式浏览器并不支持Media Queries,比如IE9，可以借助JS的库）</li>
</ul>


<pre><code class="``">  &lt;!--[if it IE9]&gt;
      &lt;script src="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js"&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
</code></pre>

<ul>
<li><p>注意事项</p>

<ul>
<li><p>First</p>

<pre><code class="``">  html{font-size:62.5%;} font-size:2rem==font-size:20px;
</code></pre>

<blockquote><p>默认字体大小是16px,16*62.5%=10px,1rem=10px。rem只相对HTNL或body的字体大小，没有继承父级尺寸的关系，但是em有继承父级尺寸的关系。</p></blockquote></li>
<li><p>Second</p>

<blockquote><p>min-width&amp;max-width的意思是最小宽度和最大宽度</p></blockquote></li>
<li><p>Third</p>

<blockquote><p>div布局尽量用百分比，不使用固定像素</p></blockquote></li>
<li><p>Forth</p>

<pre><code class="``">  box-sizing:border-box;
</code></pre>

<blockquote><p>标准盒模型里面撑的时候，外面会变大，设置了box-sizing后，固定和盒模型的大小，不会被撑大。</p></blockquote></li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basis of Picture Theory]]></title>
    <link href="http://jcs007.github.io/blog/2017/08/07/demo01/"/>
    <updated>2017-08-07T13:29:29+08:00</updated>
    <id>http://jcs007.github.io/blog/2017/08/07/demo01</id>
    <content type="html"><![CDATA[<h2>常见图片格式</h2>

<p><font color=Peru>1. PNG</font></p>

<pre><code>透明、无损压缩、色彩少、ie6不支持、渐进显示和流式读写（网速慢时先出现轮廓，再逐渐清晰---递增式编码[Progressive Encoding])
</code></pre>

<p><font color=VioletRed>2. JPG</font></p>

<pre><code>色彩多、有损压缩、基本显示效果（从上到下一条一条逐渐加载---顺序编码[Sequential Encoding]）
</code></pre>

<p><font color=GoldenRod>3. GIF</font></p>

<pre><code>动态、可透明、不能半透、体积小、处理颜色少，处理锯齿效果差。后台统计日志和统计前端性能可以用GIF。
</code></pre>

<p><font color=SeaGreen>4. SVG</font></p>

<pre><code>矢量图形、无损压缩、绘制路径xml语言（可以编程画出图像、圆角、锯齿处理得相当好）、浏览器支持差，主要用于移动端font-face。
</code></pre>
]]></content>
  </entry>
  
</feed>
